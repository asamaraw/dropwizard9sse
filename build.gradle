/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sanka' at '11/19/15 2:10 PM' with Gradle 2.9
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

project.sourceCompatibility = 1.8
project.targetCompatibility = 1.8

repositories {
    mavenCentral()
}

// add provided configuration for tools such as lombok
configurations {
    provided
}

sourceSets.main.compileClasspath += [configurations.provided]
sourceSets.test.compileClasspath += [configurations.provided]
eclipse.classpath.plusConfigurations += [configurations.provided]
idea.module.scopes.PROVIDED.plus += [configurations.provided]

dependencies {
    provided "org.projectlombok:lombok:${lombokVersion}" // compile-time only
    provided "org.slf4j:slf4j-api:${slf4jVersion}" // compile-time only'

    compile "io.dropwizard:dropwizard-core:$dropwizardVersion"

//    testCompile 'junit:junit:4.12'
}

mainClassName = 'org.github.asamaraw.dwsse.KeyService'

jar {

    manifest {
        attributes "Implementation-Title": "Gradle Quickstart",
            "Implementation-Version": version,
            "Main-Class" : mainClassName
    }

    // remove the security files (from mail.jar / activation.jar) so that the jar will be executable.
    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }
}

shadowJar {
    mergeServiceFiles()
}

run {
    args 'server', './config.yml'
}

assemble.dependsOn shadowJar
